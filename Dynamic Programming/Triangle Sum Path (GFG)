class Solution {
  public:
    int f(int i, int j, vector<vector<int>>& triangle, vector<vector<int>>& dp, int N, int M)
    {
        if(i == N-1)
        {
            return triangle[i][j];
        }
        if(dp[i][j] != -1)
        {
            return dp[i][j];
        }
        
        int op1 = triangle[i][j] + f(i+1, j, triangle, dp, N, M);
        int op2 = triangle[i][j] + f(i+1, j+1, triangle, dp, N, M);
        
        return dp[i][j] = min(op1, op2);
    }
  
    int minimizeSum(int n, vector<vector<int>>& triangle) {
        int N = triangle.size();
        int M = triangle[0].size();
        vector<vector<int>> dp(N, vector<int>(N, -1));
        
        return f(0,0,triangle, dp, N, M);
        
    }
};
