//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{

	public:
	int mod = (1e9 + 7);
	int f(int index, int arr[], int n, int target, vector<vector<int>> &dp)
	{
	    if(index == 0)
	    {
	        if(target == 0 && arr[0] == 0) return 2;
	        if(target == 0 || target == arr[0]) return 1;
	        return 0;
	    }
	    
	    if(dp[index][target] != -1)
	    {
	        return dp[index][target];
	    }
	    
	    int notpick = f(index-1, arr, n, target, dp);
	    int pick = 0;
	    if(arr[index] <= target)
	    {
	        pick = f(index-1, arr, n, target - arr[index], dp);
	    }
	    
	    return dp[index][target] = (pick + notpick)%mod;
	}
	
	int perfectSum(int arr[], int n, int sum)
	{
        vector<vector<int>> dp(n, vector<int>(sum+2, -1));
        
        int ans = f(n-1, arr, n, sum, dp);
        
        // ans = ans%(int(1e9 + 7));
        
        return ans;
	}
	  
};

//{ Driver Code Starts.
int main() 
{
   	
   
   	int t;
    cin >> t;
    while (t--)
    {
        int n, sum;

        cin >> n >> sum;

        int a[n];
        for(int i = 0; i < n; i++)
        	cin >> a[i];

       

	    Solution ob;
	    cout << ob.perfectSum(a, n, sum) << "\n";
	     
    }
    return 0;
}

// } Driver Code Ends
