//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{

	public:
	
	int f(int index, int V, int coins[], int M, vector<vector<int>> &dp)
	{
	    if(index == 0)
	    {
	        if( V % coins[0]  == 0)
	        {
	            return V/coins[0];
	        }
	        else
	        {
	            return 1e9;
	        }
	    }
	    
	    if(dp[index][V] != -1)
	    {
	        return dp[index][V];
	    }
	    
	    int take = INT_MAX;
	    if(coins[index] <= V)
	    {
	        take = 1 + f(index, V - coins[index], coins, M,dp);
	    }
	    int nottake = f(index-1, V, coins, M, dp);
	    
	    return dp[index][V] = min(take, nottake);
	}
	
	int minCoins(int coins[], int M, int V) 
	{ 
	    vector<vector<int>> dp(M, vector<int>(V+1, -1));
	    
	    int ans =  f(M-1, V, coins, M, dp);
	    
	    if(ans >= 1e9)
	    {
	        return -1;
	    }
	    else
	    {
	        return ans;
	    }
	} 
	  
};

//{ Driver Code Starts.
int main() 
{
   
   
   	int t;
    cin >> t;
    while (t--)
    {
        int v, m;
        cin >> v >> m;

        int coins[m];
        for(int i = 0; i < m; i++)
        	cin >> coins[i];

      
	    Solution ob;
	    cout << ob.minCoins(coins, m, v) << "\n";
	     
    }
    return 0;
}

// } Driver Code Ends
