//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


class Array
{
public:
    template <class T>
    static void input(vector<T> &A,int n)
    {
        for (int i = 0; i < n; i++)
        {
            scanf("%d ",&A[i]);
        }
    }

    template <class T>
    static void print(vector<T> &A)
    {
        for (int i = 0; i < A.size(); i++)
        {
            cout << A[i] << " ";
        }
        cout << endl;
    }
};


// } Driver Code Ends

class Solution {
  public:
    int f(int index, int buy, vector<int> &prices, vector<vector<int>> &dp)
    {
        if(index == prices.size())
        {
            return 0;
        }
        
        if(dp[index][buy] != -1) return dp[index][buy];
        
        if(buy)
        {
            int op1 = -prices[index] + f(index+1, 0, prices, dp);
            int op2 = 0 + f(index+1, 1, prices, dp);
            return dp[index][buy] = max(op1, op2);
        }
        else
        {
            int op1 = prices[index] + f(index+1, 1, prices, dp);
            int op2 = f(index+1, 0, prices, dp);
            return dp[index][buy] = max(op1, op2);
        }
    }
  
    int stockBuyAndSell(int n, vector<int> &prices) {
        
        // vector<vector<int>> dp(n+1, vector<int>(2, 0));
        
        // dp[n][0] = 0;
        // dp[n][1] = 0;
        
        vector<int> ahead(2, 0), curr(2, 0);
        
        
        for(int index = n-1; index>=0; index--)
        {
            for(int buy = 0; buy < 2; buy++)
            {
                if(buy)
                {
                    int op1 = -prices[index] + ahead[0];
                    int op2 = 0 + ahead[1];
                    curr[buy] = max(op1, op2);
                }
                else
                {
                    int op1 = prices[index] + ahead[1];
                    int op2 = ahead[0];
                    curr[buy] = max(op1, op2);
                }
            }
            ahead = curr;
        }
        
        return ahead[1];
        
    }
};


//{ Driver Code Starts.

int main(){
    int t;
    scanf("%d ",&t);
    while(t--){
        
        int n;
        scanf("%d",&n);
        
        
        vector<int> prices(n);
        Array::input(prices,n);
        
        Solution obj;
        int res = obj.stockBuyAndSell(n, prices);
        
        cout<<res<<endl;
        
    }
}

// } Driver Code Ends
