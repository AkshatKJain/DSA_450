//{ Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h> 
using namespace std; 

// } Driver Code Ends
//User function template for C++

class Solution{   
public:

    bool f(int i, int target, vector<int> arr, vector<vector<int>> &dp)
    {
        if(target == 0)
        {
            return true;
        }
        
        if(i == 0)
        {
            return (target == arr[0]);
        }
        
        if(dp[i][target] != -1)
        {
            return dp[i][target];
        }
        
        bool nottake = f(i-1, target, arr, dp);
        bool take = false;
        if(arr[i] <= target)
        {
            take = f(i-1, target - arr[i], arr, dp);
        }
        
        return dp[i][target] = nottake | take;
    }

    bool isSubsetSum(vector<int>arr, int sum){
        vector<vector<int>> dp(arr.size(), vector<int>(sum+1, -1));
        return f(arr.size()-1, sum, arr, dp);
    }
};

//{ Driver Code Starts.
int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        int N, sum;
        cin >> N;
        vector<int> arr(N);
        for(int i = 0; i < N; i++){
            cin >> arr[i];
        }
        cin >> sum;
        
        Solution ob;
        cout << ob.isSubsetSum(arr, sum) << endl;
    }
    return 0; 
} 

// } Driver Code Ends
