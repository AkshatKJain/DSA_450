#include <bits/stdc++.h>
int fn(vector<int> &nums, vector<int> &dp, int index)
{
    if(dp[index] != -1)
    {
        return dp[index];
    }
    if(index == 0)
    {
        return nums[index];
    }
    if(index < 0)
    {
        return 0;
    }

    int pick = nums[index] + fn(nums, dp, index-2);
    int notpick = fn(nums, dp, index-1);

    return dp[index] = max(pick, notpick);
}

int maximumNonAdjacentSum(vector<int> &nums){

    vector<int> dp(nums.size()+1, -1);

    return fn(nums, dp, nums.size()-1);

}
