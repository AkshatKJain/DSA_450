class Solution
{
	public:
	
	void dfs(int node, vector<int> &visited, vector<int> adj[], stack<int> &ans)
	{
	    visited[node] = 1;
	    
	    for(auto it: adj[node])
	    {
	        if(!visited[it])
	        {
	            dfs(it, visited, adj, ans);
	        }
	    }
	    
	    ans.push(node);
	}
	
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    vector<int> visited(V, 0);
	    stack<int> ans;
	    
	    for(int i=0; i<V; i++)
	    {
	        if(!visited[i])
	        {
	            dfs(i, visited, adj, ans);
	        }
	    }
	    
	    vector<int> res;
	    while(!ans.empty())
	    {
	        res.push_back(ans.top());
	        ans.pop();
	    }
	    return res;
	}
};
