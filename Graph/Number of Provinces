class Solution {
  public:
  
    void bfs(vector<vector<int>> adj, int V, int node, vector<int> &visited)
    {
        queue<int> q;
        q.push(node);
        visited[node] = 1;
        
        while(!q.empty())
        {
            int node = q.front();
            q.pop();
            
            for(int i = 0; i<V; i++)
            {
                if(adj[node][i] == 1 && visited[i] == 0)
                {
                    q.push(i);
                    visited[i] = 1;
                }
            }
        }
    }
  
    int numProvinces(vector<vector<int>> adj, int V) {
        vector<int> visited(V, 0);
        int counter = 0;
        
        for(int i=0; i<V; i++)
        {
            if(!visited[i])
            {
                counter++;
                bfs(adj, V, i, visited);
            }
        }
        return counter;
    }
};
