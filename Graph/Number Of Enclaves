class Solution {
  public:
    int numberOfEnclaves(vector<vector<int>> &grid) {
        queue<pair<int,int>>q;
        int n = grid.size();
        int m = grid[0].size();
        vector<vector<int>> visited(n, vector<int>(m,0));
        
        for(int i=0; i<n; i++)
        {
            for(int j =0; j<m; j++)
            {
                if(i == 0 || j == 0 || i == n-1 || j == m-1)
                {
                    if(grid[i][j] == 1)
                    {
                        q.push({i,j});
                        visited[i][j] = 1;
                    }
                }
            }
        }
        
        vector<pair<int,int>> temp;
        temp.push_back({0,1});
        temp.push_back({0,-1});
        temp.push_back({1,0});
        temp.push_back({-1,0});
        
        while(!q.empty())
        {
            int r = q.front().first;
            int c = q.front().second;
            q.pop();
            
            for(auto it : temp)
            {
                int newr = r + it.first;
                int newc = c + it.second;
                
                if(newr < n && newr >= 0 && newc < m && newc >= 0)
                {
                    if(grid[newr][newc] == 1 && visited[newr][newc] == 0)
                    {
                        q.push({newr, newc});
                        visited[newr][newc] = 1;
                    }
                }
            }
        }
        int count = 0;
        
        for(int i =0; i<n; i++)
        {
            for(int j=0; j<m; j++)
            {
                if(visited[i][j] == 0 && grid[i][j] == 1)
                {
                    count++;
                }
            }
        }
        
        return count;
    }
};
