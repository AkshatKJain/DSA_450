class Solution {
public:
    bool fn(int V, vector<int>adj[], vector<int> &visited, int n)
    {
        queue<int> q;
	    q.push(n);
	    visited[n] = 0;
	    
	    while(!q.empty())
	    {
	        int node = q.front();
	        q.pop();
	        for(auto it: adj[node])
	        {
	            if(visited[it] == -1)
	            {
	                q.push(it);
	                visited[it] = !visited[node];
	            }
	            else if(visited[it] == visited[node])
	            {
	                return false;
	            }
	        }
	    }
	    
	    return true;
    }

	bool isBipartite(int V, vector<int>adj[]){
	    vector<int> visited(V, -1);
	    
	    for(int i = 0; i<V; i++)
	    {
	        if(visited[i] == -1)
	        {
	            if(fn(V, adj, visited, i) == false)
	            {
	                return false;
	            }
	        }
	    }
	    return true;
	}

};
