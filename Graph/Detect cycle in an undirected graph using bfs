class Solution {
  public:
    bool fn(int node, vector<int> &visited, vector<int> adj[])
    {
        visited[node] = 1;
        queue<pair<int,int>> q;
        q.push({node, -1});
        while(!q.empty())
        {
            int n = q.front().first;
            int p = q.front().second;
            q.pop();
            
            for(auto it: adj[n])
            {
                if(!visited[it] && it != p)
                {
                    visited[it] = 1;
                    q.push({it, n});
                }
                else if(visited[it] && it != p)
                {
                    return true;
                }
            }
        }
        
        return false;
    }
    
    
    bool isCycle(int V, vector<int> adj[]) {
        
        vector<int> visited(V, 0);
        
        for(int i=0; i<V; i++)
        {
            if(!visited[i])
            {
                if(fn(i, visited, adj))
                {
                    return true;
                }
            }
        }
        
        return false;
        
    }
};
